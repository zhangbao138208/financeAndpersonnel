// <auto-generated />
using System;
using DncZeus.Api.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DncZeus.Api.Migrations
{
    [DbContext(typeof(DncZeusDbContext))]
    [Migration("20201013105201_init1")]
    partial class init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DncZeus.Api.Entities.DncIcon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Custom")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DncIcon");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncMenu", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BeforeCloseFun")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Component")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("HideInMenu")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("IsDefaultRouter")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NotCache")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ParentName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Guid");

                    b.ToTable("DncMenu");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncPermission", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ActionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<Guid>("MenuGuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("MenuGuid");

                    b.ToTable("DncPermission");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncPermissionWithMenu", b =>
                {
                    b.Property<int>("IsDefaultRouter")
                        .HasColumnType("int");

                    b.Property<string>("MenuAlias")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("MenuGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("MenuName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PermissionActionCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PermissionCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PermissionName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PermissionType")
                        .HasColumnType("int");

                    b.ToTable("DncPermissionWithMenu");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncRole", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsBuiltin")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<bool>("IsSuperAdministrator")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("DncRole");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncRolePermissionMapping", b =>
                {
                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermissionCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("RoleCode", "PermissionCode");

                    b.HasIndex("PermissionCode");

                    b.ToTable("DncRolePermissionMapping");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncUser", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("IsLocked")
                        .HasColumnType("int");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PositionCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelegramBotToken")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TelegramChatId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("PositionCode");

                    b.ToTable("DncUser");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncUserRoleMapping", b =>
                {
                    b.Property<Guid>("UserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserGuid", "RoleCode");

                    b.HasIndex("RoleCode");

                    b.ToTable("DncUserRoleMapping");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.FinanceAccount", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Account")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Holder")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Owner")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Code");

                    b.ToTable("FinanceAccount");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.FinanceInfo", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FinanceAccount")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HandleDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HandleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InfoStatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("User")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Code");

                    b.ToTable("FinanceInfo");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.QueryModels.DncPermission.DncPermissionWithAssignProperty", b =>
                {
                    b.Property<string>("ActionCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Code")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IsAssigned")
                        .HasColumnType("int");

                    b.Property<Guid?>("MenuGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.ToTable("DncPermissionWithAssignProperty");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.ResumeInfo", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Alipay")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AnimalSign")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Awards")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("County")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Education")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EducationBackgrounds")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Height")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("HomeInfo")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Interests")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("JobStatus")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LevelID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("License")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NickName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PositionCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Province")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("QQ")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RealName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SelfEvaluations")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("Skills")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TEL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telegram")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Wechat")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Weight")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Works")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Years")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("ResumeInfo");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.SystemDicType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Code");

                    b.ToTable("SystemDicType");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.SystemDictionary", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Fixed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Code");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("TypeCode");

                    b.ToTable("SystemDictionary");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.SystemLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Application")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Callsite")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Levels")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Operatingaddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Operatingtime")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Referrerurl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Requesturl")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("SystemLog");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.UserDepartment", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Company")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("County")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Fax")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Friday")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<string>("Manager")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Monday")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Province")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Saturday")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SortID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Sunday")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Thursday")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Tuesday")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<string>("Wednesday")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Zone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Code");

                    b.ToTable("UserDepartment");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.UserPosition", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SortID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("UserPosition");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.WageInfo", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("AccumulationFund")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Additions")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal?>("BaseWage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Bonus")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Commission")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Deductions")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("IncomeTax")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("OTDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("OTWage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("PerformanceWage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PositionCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RealName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal?>("ReissueWage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("SocialSecurity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subsidy")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("TotalWage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("char(36)");

                    b.Property<int?>("WorkDays")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("WageInfo");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.WorkflowList", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrentStepCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NextStepCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("NotifyUser")
                        .HasColumnType("char(36)");

                    b.Property<string>("Number")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TemplateCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("User")
                        .HasColumnType("char(36)");

                    b.HasKey("Code");

                    b.ToTable("WorkflowList");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.WorkflowReceiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreateUser")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("StepCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TemplateCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("User")
                        .HasColumnType("char(36)");

                    b.Property<string>("WorkflowCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WorkflowReceiver");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.WorkflowStep", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsCounterSign")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SortID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TemplateCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserList")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Code");

                    b.ToTable("WorkflowStep");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.WorkflowTemplate", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<bool>("IsStepFree")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedByUserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Code");

                    b.ToTable("WorkflowTemplate");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncPermission", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.DncMenu", "Menu")
                        .WithMany("Permissions")
                        .HasForeignKey("MenuGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncRolePermissionMapping", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.DncPermission", "DncPermission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DncZeus.Api.Entities.DncRole", "DncRole")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncUser", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.UserDepartment", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode");

                    b.HasOne("DncZeus.Api.Entities.UserDepartment", "Position")
                        .WithMany()
                        .HasForeignKey("PositionCode");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncUserRoleMapping", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.DncRole", "DncRole")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DncZeus.Api.Entities.DncUser", "DncUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DncZeus.Api.Entities.SystemDictionary", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.SystemDicType", "systemDicType")
                        .WithMany("SystemDictionarys")
                        .HasForeignKey("TypeCode")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
